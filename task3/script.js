// // Дано трехзначное число. Вывести число, полученное при перестановке цифр
// // сотен и десятков исходного числа (например, 123 перейдет в 213).
// function changeOrder(a) {
//   const arr = a.toString().split("");
//   const arr1 = [arr[1], arr[0], arr[2]];
//   return +arr1.join("");
// }
// // console.log(changeOrder(123));
// // 2. Даны две переменные целого типа: A и B. Если их значения не равны, то
// // присвоить каждой переменной сумму этих значений, а если равны, то
// // присвоить переменным нулевые значения. Вывести новые значения
// // переменных A и B.
// let a = 9;
// let b = 0;
// function changeOrder() {
//   if (a === b) {
//     return (a = 0), (b = 0);
//   } else {
//     let c = a;
//     a = b;
//     b = c;
//   }
// }
// console.log(changeOrder(), a, b);
// // 3. Дан номер года (положительное целое число). Определить количество дней в
// // этом году, учитывая, что обычный год насчитывает 365 дней, а високосный —
// // 366 дней. Високосным считается год, делящийся на 4, за исключением тех
// // годов, которые делятся на 100 и не делятся на 400 (например, годы 300, 1300 и
// // 1900 не являются високосными, а 1200 и 2000 — являются).
// function findYear(a) {
//   if (a % 4 != 0) {
//     console.log("aaa");
//     return 365;
//   } else if (a % 100 != 0) {
//     console.log("eeeee");
//     return 366;
//   } else if (a % 400 !== 0) {
//     console.log("ddddd");
//     return 365;
//   } else {
//     return 366;
//   }
// }
// console.log(findYear(2023));
// Даны целые положительные числа N и K. Найти сумму
// function findCount(a, b) {
//   let total = 0;
//   for (let i = 1; i <= a; i++) {
//     total = total + Math.pow(i, b);
//   }
//   return total;
// }
// console.log(findCount(5, 2));
// // 6. Дан массив A размера N. Найти минимальный элемент из его элементов с
// // четными номерами: A2, A4, A6, . . . .
// function findMin(a) {
//   let arr = [];
//   for (let i = 0; i <= a.length; i++) {
//     if (a[i] % 2 == 0 && a[i] != 0) {
//       arr.push(a[i]);
//     }
//   }
//   console.log(arr);
//   return Math.min(...arr);
// }
// console.log(findMin([1, 3, 4, 5, 6, 8, 9, 10, 0]));

// // 7. Дан массив размера N. Найти два соседних элемента, сумма которых
// // максимальна, и вывести эти элементы в порядке возрастания их индексов

// function some(n) {
//   let max = 0;
//   let arr = [];
//   for (let i = 0; i <= n.length; i++) {
//     if (i !== n.length) {
//       const a = n[i] + n[i + 1];

//       if (max <= a) {
//         max = a;
//         arr = [i, i + 1];
//       }
//     }
//   }
//   return arr;
// }
// console.log(some([1, 3, 4, 5, 6, 8, 9, 10, 3]));
// // 8. Дан массив размера N. Осуществить циклический сдвиг элементов массива
// // вправо на одну позицию (при этом A1 перейдет в A2, A2 — в A3, . . ., AN — в
// // A1).
// function move(a) {
//   let arr = [];
//   let last = a[a.length - 1];
//   return [last, ...a.splice(0, a.length - 1)];
// }
// console.log(move([1, 3, 4, 5, 6, 8, 9, 10, 3]));

// // 9. Дан массив размера N, все элементы которого, кроме первого, упорядочены
// // по возрастанию. Сделать массив упорядоченным, переместив первый элемент
// // на новую позицию.
// function findSort(arr) {
//   let arr1;
//   for (let i; i <= arr.length; i++) {
//     if (arr[0] <= arr[i]) {
//       return (arr1 = [...arr[i - 1], arr[0], ...arr[i]]);
//     }
//   }
//   return arr1;
// }
// console.log(findSort([4, 1, 2, 3, 5]));
